name: Docker

on:
  push:
    branches:
      - 'main'

jobs:
  docker:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18]

    env:
      CI: true
      NODE_OPTIONS: --max-old-space-size=4096

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
          cache-dependency-path: '**/yarn.lock'

      - name: Restore node_modules for lerna (key?)
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: lerna-${{ matrix.node-version }}-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies with yarn
        working-directory: dx-hub
        run: yarn install --frozen-lockfile

      - name: Build type declarations
        working-directory: dx-hub
        run: yarn tsc

      - name: Build packages
        working-directory: dx-hub
        run: yarn build:all

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./dx-hub
          file: ./docker/dx-hub/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: avaliasystems/dx-hub-img:latest
